(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     22106,        549]
NotebookOptionsPosition[     21676,        530]
NotebookOutlinePosition[     22024,        545]
CellTagsIndexPosition[     21981,        542]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Topology Compatibility Helper", "Title",
 CellChangeTimes->{{3.688740578322731*^9, 3.6887405867007933`*^9}, {
  3.688740666666849*^9, 3.68874071608607*^9}, {3.6887408631061554`*^9, 
  3.688740864363448*^9}}],

Cell["For IBM Universal Quantum Computers", "Subtitle",
 CellChangeTimes->{{3.688740728425606*^9, 3.688740760279433*^9}}],

Cell["\<\
Version: 0.1.2, IBMQASM 1.1
Author: Allen Glan
Date: November 22, 2016\
\>", "Text",
 CellChangeTimes->{{3.688740771495936*^9, 3.6887408371228557`*^9}, {
  3.6887409473592052`*^9, 3.688740964985463*^9}, {3.6887951604566855`*^9, 
  3.688795197452856*^9}}],

Cell["\<\
Tested on 5-qubit systems
Performance Impact of Rewriting Algorithms:
Undirected: Exponential
Directed: Linear\
\>", "Text",
 CellChangeTimes->{{3.688740771495936*^9, 3.6887408371228557`*^9}, {
  3.6887409473592052`*^9, 3.688741014601512*^9}, {3.688795200597352*^9, 
  3.688795203771456*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rewriteTopology", "[", 
    RowBox[{"qasmPath_", ",", "outputPath_"}], "]"}], ":=", "\n", "\n", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\n", 
      RowBox[{
      "undRewExp", ",", "dirRewLnr", ",", "\n", "\n", "qasmStream", ",", 
       "qasmList", ",", "qasmCursor", ",", "qasmLength", ",", "initPos", ",", 
       "cxAbsPos", ",", "optnState", ",", "optnStart", ",", "optnEnd", ",", 
       "optnPos", ",", "topoState", ",", "topoList", ",", "topoGraph", " ", 
       ",", "topoUndGraph", ",", "qasmCmd", ",", "cmdLength", ",", "cxList", 
       ",", "cxRouteList", ",", "cxUndRew", ",", "cxDirRew", ",", "cxRewPair",
        ",", "cxOutList", ",", "outputList", ",", "cmdNewLength", ",", 
       "outputStream"}], "\n", "}"}], ",", "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"REWRITE", " ", "FUNCTIONS"}], " ", "*)"}], "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"Undirected", " ", "rewriting", " ", "O", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1.5", "*", 
          RowBox[{"2", "^", "E"}]}], "-", "2"}], ")"}], " ", "Exponential"}], 
      " ", "*)"}], "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"undRewExp", "[", "route_", "]"}], ":=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"heap", ",", "routeGroup"}], "}"}], ",", "\n", 
         RowBox[{
          RowBox[{"routeGroup", "=", 
           RowBox[{"Partition", "[", 
            RowBox[{"route", ",", "2", ",", "1"}], "]"}]}], ";", "\n", 
          RowBox[{"heap", "=", 
           RowBox[{"routeGroup", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
          RowBox[{"Do", "[", "\n", 
           RowBox[{
            RowBox[{"heap", "=", 
             RowBox[{"Sequence", "[", 
              RowBox[{"heap", ",", "n", ",", "heap", ",", "n"}], "]"}]}], ",",
             "\n", 
            RowBox[{"{", 
             RowBox[{"n", ",", 
              RowBox[{"Drop", "[", 
               RowBox[{"routeGroup", ",", "1"}], "]"}]}], "}"}]}], "\n", 
           "]"}], ";", "\n", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"heap", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{"heap", ",", "1"}], "]"}]}], ";"}], "*)"}], "\n", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "heap", "}"}], "]"}], ";"}]}], "\n", "]"}]}], ";", 
      "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Directed", " ", "rewriting", " ", "O", 
        RowBox[{"(", 
         RowBox[{"3", "E"}], ")"}], " ", "Linear"}], " ", "*)"}], "\n", 
      RowBox[{
       RowBox[{"dirRewLnr", "[", 
        RowBox[{"routeGroup_", ",", "topoList_"}], "]"}], ":=", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"comp", ",", "dirRewSgl", ",", "assem"}], "}"}], ",", "\n", 
         RowBox[{
          RowBox[{"comp", "=", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"n", "=", 
               RowBox[{"ToExpression", "@", "topoList"}]}], "}"}], ",", 
             RowBox[{"Thread", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Keys", "@", "n"}], ",", 
                RowBox[{"Values", "@", "n"}]}], "}"}], "]"}]}], "]"}]}], ";", 
          "\n", 
          RowBox[{
           RowBox[{"dirRewSgl", "[", "route_", "]"}], ":=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{"comp", ",", "route"}], "]"}], "==", 
              RowBox[{"{", "}"}]}], ",", "\n", 
             RowBox[{"Return", "[", 
              RowBox[{"Hold", "@", 
               RowBox[{"Sequence", "[", "\n", 
                RowBox[{
                 RowBox[{"\"\<h \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"route", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
                  "\"\<;\>\""}], ",", "\n", 
                 RowBox[{"\"\<h \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"route", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
                  "\"\<;\>\""}], ",", "\n", 
                 RowBox[{"\"\<cx \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"route", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<, \>\"",
                   "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"route", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
                  "\"\<;\>\""}], ",", "\n", 
                 RowBox[{"\"\<h \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"route", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
                  "\"\<;\>\""}], ",", "\n", 
                 RowBox[{"\"\<h \>\"", "<>", 
                  RowBox[{"ToString", "[", 
                   RowBox[{"route", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
                  "\"\<;\>\""}]}], "\n", "]"}]}], "]"}], ",", "\n", 
             RowBox[{"Return", "[", 
              RowBox[{"\"\<cx \>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"route", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\<, \>\"", "<>", 
               RowBox[{"ToString", "[", 
                RowBox[{"route", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\<;\>\""}], 
              "]"}]}], "\n", "]"}]}], ";", "\n", 
          RowBox[{"assem", "=", 
           RowBox[{"Map", "[", 
            RowBox[{"dirRewSgl", ",", "routeGroup", ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\n", 
          RowBox[{"Return", "[", 
           RowBox[{"ReleaseHold", "@", "assem"}], "]"}], ";"}]}], "\n", 
        "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", "INITIALIZATION", " ", "*)"}], "\n", "\n", 
      RowBox[{"qasmList", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"qasmCursor", "=", "\"\<\>\""}], ";", "\n", 
      RowBox[{"qasmLength", "=", "0"}], ";", "\n", 
      RowBox[{"initPos", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"cxAbsPos", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Define", " ", "Option", " ", "States", " ", "and", " ", "Substates"}],
        " ", "*)"}], "\n", 
      RowBox[{"optnState", "=", "False"}], ";", "\n", 
      RowBox[{"topoState", "=", "False"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Define", " ", "Option", " ", "Positions"}], " ", "*)"}], "\n", 
      RowBox[{"optnStart", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"optnEnd", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"optnPos", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"(*", " ", "Topology", " ", "*)"}], "\n", 
      RowBox[{"topoList", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"topoGraph", "=", "Null"}], ";", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Pure", " ", "command", " ", "chain"}], " ", "*)"}], "\n", 
      RowBox[{"qasmCmd", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"cmdLength", "=", "0"}], ";", "\n", 
      RowBox[{"cxList", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"cxRouteList", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"outputList", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"cmdNewLength", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"READING", " ", "INPUT"}], " ", "*)"}], "\n", "\n", 
      RowBox[{"Print", "[", "\"\<\>\"", "]"}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Check", " ", "file", " ", "existence"}], " ", "*)"}], "\n", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FileExistsQ", "[", "qasmPath", "]"}], "==", "False"}], ",", 
        "\n", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<[ERROR] \>\"", "<>", "qasmPath", "<>", "\"\< not found!\>\""}],
           "]"}], ";", "\n", 
         RowBox[{"Exit", "[", "]"}]}]}], "\n", "]"}], ";", "\n", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<[INFO] Reading from \>\"", "<>", "qasmPath", "<>", "\"\<.\>\""}], 
       "]"}], ";", "\n", "\n", 
      RowBox[{"qasmStream", "=", 
       RowBox[{"OpenRead", "[", "qasmPath", "]"}]}], ";", "\n", "\n", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"qasmCursor", "!=", "\"\<EndOfFile\>\""}], ",", "\n", 
        RowBox[{
         RowBox[{"qasmCursor", "=", 
          RowBox[{"ReadLine", "[", "qasmStream", "]"}]}], ";", "\n", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"qasmList", ",", "qasmCursor"}], "]"}], ";", "\n", 
         RowBox[{"qasmLength", "+=", "1"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"Find", " ", "IBMQASM", " ", "initialization"}], " ", 
          "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{
              RowBox[{"ToString", "@", "qasmCursor"}], ",", 
              RowBox[{"\"\<//IBMQASM\>\"", "~~", "__"}]}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", "\n", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"initPos", ",", 
             RowBox[{"{", "qasmLength", "}"}]}], "]"}]}], "\n", "]"}], ";", 
         "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"Note", " ", "cx", " ", "absolute", " ", "positions"}], " ",
           "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{
              RowBox[{"ToString", "@", "qasmCursor"}], ",", 
              RowBox[{
              "\"\<cx q[\>\"", "~~", "__", "~~", "\"\<], q[\>\"", "~~", "__", 
               "~~", "\"\<]\>\""}]}], "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", "\n", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"cxAbsPos", ",", 
             RowBox[{"{", "qasmLength", "}"}]}], "]"}]}], "\n", "]"}], ";", 
         "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"Trigger", " ", 
           RowBox[{"I", "/", "O"}], " ", "of", " ", "Option", " ", "State"}], 
          " ", "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{
              RowBox[{"ToString", "@", "qasmCursor"}], ",", "\"\</*\>\""}], 
             "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", "\n", 
           RowBox[{
            RowBox[{"optnState", "=", "True"}], ";", "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"optnStart", ",", "qasmLength"}], "]"}]}]}], "\n", "]"}],
          ";", "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{
              RowBox[{"ToString", "@", "qasmCursor"}], ",", "\"\<*/\>\""}], 
             "]"}], "!=", 
            RowBox[{"{", "}"}]}], ",", "\n", 
           RowBox[{
            RowBox[{"optnState", "=", "False"}], ";", "\n", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"optnEnd", ",", "qasmLength"}], "]"}], ";"}]}], "\n", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Deny", " ", "all", " ", "substates", " ", "when", " ", "Option", 
           " ", "State", " ", "is", " ", "disabled"}], " ", "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"optnState", "==", "False"}], ",", 
           RowBox[{"topoState", "=", "False"}]}], "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"Start", " ", "Topology", " ", "logging"}], " ", "*)"}], 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"topoState", "==", "True"}], ",", "\n", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"topoList", ",", "qasmCursor"}], "]"}], ";"}]}], "\n", 
          "]"}], ";", "\n", "\n", 
         RowBox[{"(*", " ", 
          RowBox[{"Enable", " ", "Topology", " ", "State"}], " ", "*)"}], 
         "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"optnState", "==", "True"}], ",", "\n", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"StringCases", "[", 
                RowBox[{
                 RowBox[{"ToString", "@", "qasmCursor"}], ",", 
                 "\"\<Topology\>\""}], "]"}], "!=", 
               RowBox[{"{", "}"}]}], ",", "\n", 
              RowBox[{"topoState", "=", "True"}]}], "\n", "]"}], ";"}]}], 
          "\n", "]"}], ";"}]}], "\n", "\n", "]"}], ";", "\n", "\n", 
      RowBox[{"Close", "[", "qasmStream", "]"}], ";", "\n", 
      RowBox[{"qasmLength", "-=", "1"}], ";", "\n", 
      RowBox[{"qasmList", "=", 
       RowBox[{"Drop", "[", 
        RowBox[{"qasmList", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"FINDING", " ", "TOPOLOGY", " ", "DEFINITIONS"}], " ", "*)"}], 
      "\n", "\n", 
      RowBox[{"optnPos", "=", 
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"Flatten", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Range", "@", 
             RowBox[{"ReplaceAll", "[", 
              RowBox[{"n", ",", 
               RowBox[{"List", "->", "Sequence"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"n", ",", 
              RowBox[{"Thread", "[", 
               RowBox[{"{", 
                RowBox[{"optnStart", ",", "optnEnd"}], "}"}], "]"}]}], 
             "}"}]}], "]"}]}], ",", "1"}], "]"}]}], ";", "\n", "\n", 
      RowBox[{"topoGraph", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"ToExpression", "@", "topoList"}], ",", 
         RowBox[{"DirectedEdges", "->", "True"}]}], "]"}]}], ";", "\n", 
      RowBox[{"topoUndGraph", "=", 
       RowBox[{"Graph", "[", 
        RowBox[{
         RowBox[{"ToExpression", "@", "topoList"}], ",", 
         RowBox[{"DirectedEdges", "->", "False"}]}], "]"}]}], ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"topoDiagram", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"topoGraph", ",", 
           RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
           RowBox[{"EdgeLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
           RowBox[{"GraphLayout", "\[Rule]", "\"\<StarEmbedding\>\""}], ",", 
           RowBox[{"VertexSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
       "*)"}], "\n", "\n", 
      RowBox[{"qasmCmd", "=", 
       RowBox[{"Delete", "[", 
        RowBox[{"qasmList", ",", 
         RowBox[{"Join", "[", 
          RowBox[{"initPos", ",", "optnPos"}], "]"}]}], "]"}]}], ";", "\n", 
      RowBox[{"cmdLength", "=", 
       RowBox[{"Length", "[", "qasmCmd", "]"}]}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"Error", "-", "handling"}], " ", "*)"}], "\n", 
      RowBox[{"If", "[", "\n", 
       RowBox[{
        RowBox[{
         RowBox[{"qasmLength", "<=", "1"}], "||", 
         RowBox[{
          RowBox[{"Length", "@", "initPos"}], "!=", "1"}], "||", 
         RowBox[{
          RowBox[{"WeaklyConnectedGraphQ", "[", "topoGraph", "]"}], "!=", 
          "True"}]}], ",", "\n", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<[ERROR] QASM file corrupted!\>\"", "]"}], 
         ";", "\n", 
         RowBox[{"Exit", "[", "]"}]}], ",", "\n", 
        RowBox[{"Print", "[", "\"\<[INFO] QASM input legit.\>\"", "]"}]}], 
       "\n", "]"}], ";", "\n", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<[INFO] Read \>\"", "<>", 
        RowBox[{"ToString", "@", "cmdLength"}], "<>", "\"\< rules.\>\""}], 
       "]"}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"UNDIRECTED", " ", "REWRITING"}], " ", "*)"}], "\n", 
      RowBox[{"cxList", "=", 
       RowBox[{"Table", "[", "\n", 
        RowBox[{
         RowBox[{"ToExpression", "@", 
          RowBox[{"ToString", "@", 
           RowBox[{"{", 
            RowBox[{"StringDrop", "[", 
             RowBox[{"n", ",", "3"}], "]"}], "}"}]}]}], ",", "\n", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"Flatten", "@", 
            RowBox[{"StringCases", "[", 
             RowBox[{"qasmCmd", ",", 
              RowBox[{
              "\"\<cx q[\>\"", "~~", "__", "~~", "\"\<], q[\>\"", "~~", "__", 
               "~~", "\"\<]\>\""}]}], "]"}]}]}], "}"}]}], "\n", "]"}]}], ";", 
      "\n", 
      RowBox[{"cxRouteList", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"FindShortestPath", "[", 
          RowBox[{"topoUndGraph", ",", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"n", ",", 
             RowBox[{"List", "->", "Sequence"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "cxList"}], "}"}]}], "]"}]}], ";", "\n", 
      RowBox[{"cxUndRew", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"undRewExp", "[", "n", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "cxRouteList"}], "}"}]}], "]"}]}], ";", "\n", 
      "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"DIRECTED", " ", "REWRITING"}], " ", "*)"}], "\n", 
      RowBox[{"cxDirRew", "=", 
       RowBox[{"dirRewLnr", "[", 
        RowBox[{"cxUndRew", ",", "topoList"}], "]"}]}], ";", "\n", 
      RowBox[{"cxRewPair", "=", 
       RowBox[{"Normal", "@", 
        RowBox[{"AssociationThread", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", "cxAbsPos"}], ",", "cxDirRew"}], "]"}]}]}], 
      ";", "\n", 
      RowBox[{"cxOutList", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{"qasmList", ",", "cxRewPair"}], "]"}]}]}], ";", "\n", "\n", 
      RowBox[{"Print", "[", "\"\<[INFO] CNOT rewriting completed.\>\"", "]"}],
       ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"GENERATING", " ", "OUTPUT", " ", "LIST"}], " ", "*)"}], "\n", 
      RowBox[{"outputList", "=", "cxOutList"}], ";", "\n", 
      RowBox[{"cmdNewLength", "=", 
       RowBox[{
        RowBox[{"Length", "@", "outputList"}], "-", "qasmLength", "+", 
        "cmdLength"}]}], ";", "\n", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<[INFO] Generated \>\"", "<>", 
        RowBox[{"ToString", "@", "cmdNewLength"}], "<>", "\"\< rules.\>\""}], 
       "]"}], ";", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<[INFO] Performance Overhead: \>\"", "<>", 
        RowBox[{"ToString", "@", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"100", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"cmdNewLength", "-", "cmdLength"}], ")"}], "/", 
              "cmdLength"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", " ", "2"}], "}"}]}], "]"}]}], "<>", 
        "\"\<%\>\""}], "]"}], ";", "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"WRITING", " ", "TO", " ", "FILE"}], " ", "*)"}], "\n", 
      RowBox[{"outputStream", "=", 
       RowBox[{"OpenWrite", "[", "outputPath", "]"}]}], ";", "\n", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"WriteLine", "[", 
         RowBox[{"outputStream", ",", " ", "n"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"n", ",", " ", "outputList"}], "}"}]}], "]"}], ";", "\n", 
      RowBox[{"Close", "[", "outputStream", "]"}], ";", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<[INFO] Successfully streamed to \>\"", "<>", "outputPath", "<>", 
        "\"\<.\>\""}], "]"}], ";"}]}], "\n", "\n", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"End", " ", "of", " ", "Block"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.688797489792099*^9, 3.6887974981148596`*^9}, 
   3.6887989654780645`*^9}]
}, Open  ]]
},
WindowSize->{1366, 725},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 213, 3, 101, "Title"],
Cell[796, 27, 121, 1, 56, "Subtitle"],
Cell[920, 30, 264, 7, 68, "Text"],
Cell[1187, 39, 302, 8, 87, "Text"],
Cell[1492, 49, 20168, 478, 3356, "Input"]
}, Open  ]]
}
]
*)

